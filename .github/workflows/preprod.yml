name: Deploy Images to GHCR

on:
  push: 
    branches:
      - preprod
jobs:
      push-store-image:
        runs-on: ubuntu-latest
        permissions:
          contents: read
          packages: write
        steps:
          - name: 'Checkout GitHub Action'
            uses: actions/checkout@main

          - name: 'Login to GitHub Container Registry'
            uses: docker/login-action@v1
            with:
              registry: ghcr.io
              username: ${{github.actor}}
              password: ${{secrets.GH_TOKEN}}

          - name: 'Retrieve previous build number'
            id: get-build-number
            run: |
                BUILD_NUMBER=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
                https://api.github.com/repos/${{ github.repository }}/actions/variables/BUILD_NUMBER | jq -r '.value')
    
                if [ "$BUILD_NUMBER" == "null" ]; then
                BUILD_NUMBER=0
                fi
    
                echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV

                - name: 'Increment build number'
                id: increment-build-number
                run: |
                  NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
                  echo "NEW_BUILD_NUMBER=$NEW_BUILD_NUMBER" >> $GITHUB_ENV
        
                  # Update GitHub variable with the new build number
                  curl -X PATCH -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
                  -H "Accept: application/vnd.github+json" \
                  https://api.github.com/repos/${{ github.repository }}/actions/variables/BUILD_NUMBER \
                  -d "{\"value\":\"$NEW_BUILD_NUMBER\"}"

          - name: 'Build Inventory Image'
            run: |
              docker build --tag ghcr.io/karimdevwm/apigateway-service:preprod-${{ env.NEW_BUILD_NUMBER }} .
              docker push ghcr.io/karimdevwm/apigateway-service:preprod-${{ env.NEW_BUILD_NUMBER }}
          
    #   deploy:
    #     needs: push-store-image
    #     name: deploy image
    #     runs-on: ubuntu-latest

    #     steps:
    #     - name: install ssh keys
    #     # check this thread tounderstand why its needed:
    #     # <https://stackoverflow.com/a/70447517
    #       run: |
    #         install -m 600 -D /dev/null ~/.ssh/id_rsa
    #         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
    #         ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    #     - name: connect and pull
    #       run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
    #     - name: cleanup
    #       run: rm -rf ~/.ssh