name: Deploy Images to GHCR

on:
  push: 
    branches:
      - preprod

jobs:
  push-store-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Retrieve Previous Build Number
        id: get-build-number
        run: |
          BUILD_NUMBER_FILE=".github/build_number.txt"
          if [ -f "$BUILD_NUMBER_FILE" ]; then
            BUILD_NUMBER=$(cat "$BUILD_NUMBER_FILE")
          else
            BUILD_NUMBER=0
          fi
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV

      - name: Increment and Save Build Number
        id: increment-build-number
        run: |
          NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
          echo "$NEW_BUILD_NUMBER" > .github/build_number.txt
          echo "NEW_BUILD_NUMBER=$NEW_BUILD_NUMBER" >> $GITHUB_ENV

          # Commit the updated build number
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .github/build_number.txt
          git commit -m "Increment build number to $NEW_BUILD_NUMBER" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Save NEW_BUILD_NUMBER as a Repository Variable
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh api --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            /repos/${{ github.repository }}/actions/variables/BUILD_NUMBER \
            -f name="BUILD_NUMBER" -f value="$NEW_BUILD_NUMBER"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Convert repository name to lowercase
        id: repo_name
        run: echo "REPO_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print tolower($2)}')" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker build --tag ghcr.io/karimdevwm/${{ env.REPO_NAME }}:${{ env.BUILD_NUMBER }} .
          docker push ghcr.io/karimdevwm/${{ env.REPO_NAME }}:${{ env.BUILD_NUMBER }}

  deploy:
    needs: push-store-docker-image
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Retrieve NEW_BUILD_NUMBER from Repository Variables
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          NEW_BUILD_NUMBER=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            /repos/${{ github.repository }}/actions/variables/NEW_BUILD_NUMBER | jq -r '.value')
          echo "NEW_BUILD_NUMBER=$NEW_BUILD_NUMBER" >> $GITHUB_ENV

      - name: Debug SSH Connection
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo SSH Connection Successful"

      - name: Update docker-compose.yml and Restart Services
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ${{ secrets.WORK_DIR }}

            echo 'Updating docker-compose.yml with new image tag...'

            # Backup existing docker-compose.yml
            cp docker-compose.yml docker-compose.yml.bak

            NEW_BUILD_NUMBER='${{ env.NEW_BUILD_NUMBER }}'

              echo 'Repository Name:' \$REPO_NAME
              echo 'New Build Number:' \$NEW_BUILD_NUMBER

            # Replace the old image tag with the new one from repository variable
            sed -i "s|ghcr.io/karimdevwm/${{ env.REPO_NAME }}:[^ ]*|ghcr.io/karimdevwm/${{ env.REPO_NAME }}:${{ env.BUILD_NUMBER }}|" docker-compose.yml

            # Verify the change
              echo 'Updated docker-compose.yml:'
              grep 'ghcr.io/karimdevwm' docker-compose.yml

            # Restart services
            docker compose stop api-gateway
            docker compose rm -f api-gateway
            docker compose pull ghcr.io/karimdevwm/${{ env.REPO_NAME }}:${{ env.BUILD_NUMBER }}
            docker compose up -d api-gateway
          EOF

      - name: Cleanup SSH Key
        run: sudo rm -rf ~/.ssh